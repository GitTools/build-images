name: Build

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - 'feature/*'

  pull_request:
    branches:
    - main
  schedule:
  - cron: "0 12 * * *"

jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Cache cake frosting
      id: cache-cake
      uses: actions/cache@v2.1.5
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: '[Prepare]'
      if: steps.cache-cake.outputs.cache-hit != 'true'
      run: dotnet build build/CI.sln --configuration=Release

  build:
    name: Build
    needs: [prepare]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [runtime, sdk]
        version: ['5.0', '3.1']
        distro: [alpine.3.12-x64, centos.7-x64, centos.8-x64, debian.9-x64, debian.10-x64, fedora.33-x64, ubuntu.16.04-x64, ubuntu.18.04-x64, ubuntu.20.04-x64]
      fail-fast: false
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Use cached cake frosting
      id: cache-cake
      uses: actions/cache@v2.1.5
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: '[Build Docker images]'
      shell: pwsh
      run: dotnet run/build.dll --target=DockerBuild --dotnet_version=${{ matrix.version }} --dotnet_variant=${{ matrix.variant }} --dotnet_distro=${{ matrix.distro }}
    -
      name: Login to DockerHub
      if: success() && github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      name: '[Push Docker images to DockerHub registry]'
      if: success() && github.event_name != 'pull_request'
      shell: pwsh
      run: dotnet run/build.dll --target=DockerPush --dotnet_version=${{ matrix.version }} --dotnet_variant=${{ matrix.variant }} --dotnet_distro=${{ matrix.distro }} --docker_registry=dockerhub --exclusive
    -
      name: Login to GitHub Container Registry
      if: success() && github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: '[Push Docker images to Github Container registry]'
      if: success() && github.event_name != 'pull_request'
      shell: pwsh
      run: dotnet run/build.dll --target=DockerPush --dotnet_version=${{ matrix.version }} --dotnet_variant=${{ matrix.variant }} --dotnet_distro=${{ matrix.distro }} --docker_registry=github --exclusive
