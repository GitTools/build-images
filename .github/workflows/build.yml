name: Build

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - 'feature/*'

  pull_request:
    branches:
    - main
  schedule:
  - cron: "0 12 * * 1,4"

jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Cache cake frosting
      id: cache-cake
      uses: actions/cache@v2.1.5
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: '[Prepare]'
      if: steps.cache-cake.outputs.cache-hit != 'true'
      run: dotnet build build/CI.sln --configuration=Release

  build:
    name: Build
    needs: [prepare]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [runtime, sdk]
        version: ['5.0', '3.1']
        distro: [alpine.3.12, alpine.3.13, alpine.3.14, centos.7, centos.8, debian.9, debian.10, debian.11, fedora.33, ubuntu.16.04, ubuntu.18.04, ubuntu.20.04]
      fail-fast: false

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Use cached cake frosting
      id: cache-cake
      uses: actions/cache@v2.1.5
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    -
      name: Login to DockerHub
      if: success() && github.event_name != 'pull_request' #&& github.repository_owner == 'GitTools'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      name: '[Build Docker images]'
      shell: pwsh
      run: dotnet run/build.dll --target=DockerBuild --dotnet_version=${{ matrix.version }} --dotnet_variant=${{ matrix.variant }} --dotnet_distro=${{ matrix.distro }}
