name: Build Images

on:
    workflow_dispatch:
    workflow_run:
        workflows: [ Build Deps ]
        types:
            - completed
jobs:
    prepare:
        name: Prepare Build
        runs-on: ubuntu-24.04
        outputs:
            dockerDistros: ${{ steps.set_matrix.outputs.dockerDistros }}
            dotnetVersions: ${{ steps.set_matrix.outputs.dotnetVersions }}
            dotnetVariants: ${{ steps.set_matrix.outputs.dotnetVariants }}
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    ref: ${{ github.event.workflow_run.head_branch }}
            -   name: Cache cake frosting
                id: cache-cake
                uses: actions/cache@v4
                with:
                    path: run
                    key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
            -   name: Setup .NET SDK
                uses: actions/setup-dotnet@v4
                with:
                    global-json-file: build/global.json
            -   name: '[Prepare]'
                if: steps.cache-cake.outputs.cache-hit != 'true'
                run: dotnet build build/CI.sln --configuration=Release
            -   name: '[Matrix]'
                id: set_matrix
                run: dotnet run/build.dll --target=SetMatrix

    build_images:
        name: Build Images (${{ matrix.arch }} - ${{ matrix.distro }}) (${{ matrix.version }} - ${{ matrix.variant }})
        needs: [ prepare ]
        env:
            PUSH_IMAGES: ${{github.event_name != 'pull_request' && github.repository_owner == 'GitTools'}}
        runs-on: ${{ matrix.runner }}
        strategy:
            matrix:
                arch: [ amd64, arm64 ]
                runner: [ ubuntu-24.04, ubuntu-24.04-arm ]
                distro: ${{ fromJson(needs.prepare.outputs.dockerDistros) }}
                version: ${{ fromJson(needs.prepare.outputs.dotnetVersions) }}
                variant: ${{ fromJson(needs.prepare.outputs.dotnetVariants) }}
                exclude:
                    -   runner: ubuntu-24.04-arm
                        arch: amd64
                    -   runner: ubuntu-24.04
                        arch: arm64
            fail-fast: false

        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    ref: ${{ github.event.workflow_run.head_branch }}
            -   name: Use cached cake frosting
                id: cache-cake
                uses: actions/cache@v4
                with:
                    path: run
                    key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
            -   name: Setup .NET SDK
                uses: actions/setup-dotnet@v4
                with:
                    global-json-file: build/global.json
            -   name: Set up Docker
                uses: ./.github/actions/docker-setup
            -   name: Publish image to DockerHub
                uses: ./.github/actions/build-images
                with:
                    arch: ${{ matrix.arch }}
                    dotnet_version: ${{ matrix.version }}
                    dotnet_variant: ${{ matrix.variant }}
                    docker_distro: ${{ matrix.distro }}
                    docker_registry: docker.io
                    docker_registry_name: dockerhub
                    docker_registry_username: ${{ secrets.DOCKER_USERNAME }}
                    docker_registry_password: ${{ secrets.DOCKER_PASSWORD }}
            -   name: Publish image to GitHub
                uses: ./.github/actions/build-images
                with:
                    arch: ${{ matrix.arch }}
                    dotnet_version: ${{ matrix.version }}
                    dotnet_variant: ${{ matrix.variant }}
                    docker_distro: ${{ matrix.distro }}
                    docker_registry: ghcr.io
                    docker_registry_name: github
                    docker_registry_username: ${{ github.repository_owner }}
                    docker_registry_password: ${{ secrets.DOCKER_GITHUB_TOKEN }}

    build_images_manifest:
        name: Build Images (${{ matrix.distro }}) (${{ matrix.version }} - ${{ matrix.variant }})
        needs: [ prepare, build_images ]
        env:
            PUSH_IMAGES: ${{github.event_name != 'pull_request' && github.repository_owner == 'GitTools'}}
        runs-on: ubuntu-24.04
        strategy:
            matrix:
                distro: ${{ fromJson(needs.prepare.outputs.dockerDistros) }}
                version: ${{ fromJson(needs.prepare.outputs.dotnetVersions) }}
                variant: ${{ fromJson(needs.prepare.outputs.dotnetVariants) }}
            fail-fast: false

        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    ref: ${{ github.event.workflow_run.head_branch }}
            -   name: Use cached cake frosting
                id: cache-cake
                uses: actions/cache@v4
                with:
                    path: run
                    key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
            -   name: Setup .NET SDK
                uses: actions/setup-dotnet@v4
                with:
                    global-json-file: build/global.json
            -   name: Set up Docker
                uses: ./.github/actions/docker-setup
            -   name: Publish image manifest to DockerHub
                uses: ./.github/actions/build-images-manifest
                with:
                    dotnet_version: ${{ matrix.version }}
                    dotnet_variant: ${{ matrix.variant }}
                    docker_distro: ${{ matrix.distro }}
                    docker_registry: docker.io
                    docker_registry_name: dockerhub
                    docker_registry_username: ${{ secrets.DOCKER_USERNAME }}
                    docker_registry_password: ${{ secrets.DOCKER_PASSWORD }}
            -   name: Publish image manifest to GitHub
                uses: ./.github/actions/build-images-manifest
                with:
                    dotnet_version: ${{ matrix.version }}
                    dotnet_variant: ${{ matrix.variant }}
                    docker_distro: ${{ matrix.distro }}
                    docker_registry: ghcr.io
                    docker_registry_name: github
                    docker_registry_username: ${{ github.repository_owner }}
                    docker_registry_password: ${{ secrets.DOCKER_GITHUB_TOKEN }}
