name: Build Deps

on:
  workflow_dispatch:
  # push:
  #   branches:
  #   - main
  #   - 'feature/*'

  # pull_request:
  #   branches:
  #   - main
  schedule:
  - cron: "0 11 * * 1,4"

jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Cache cake frosting
      id: cache-cake
      uses: actions/cache@v3.2.3
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Setup .NET SDK
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: '7.0.x'
    -
      name: '[Prepare]'
      if: steps.cache-cake.outputs.cache-hit != 'true'
      run: dotnet build build/CI.sln --configuration=Release

  build_deps:
    name: Build and publish Deps docker images
    needs: [prepare]
    env:
        PUSH_IMAGES: ${{github.event_name != 'pull_request' && github.repository_owner == 'GitTools'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [alpine.3.13, alpine.3.14, alpine.3.15, centos.7, centos.8, debian.10, debian.11, fedora.33, ubuntu.18.04, ubuntu.20.04, ubuntu.22.04]
      fail-fast: false
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Use cached cake frosting
      id: cache-cake
      uses: actions/cache@v3.2.3
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
    -
      name: Login to DockerHub
      if: success() && env.PUSH_IMAGES == 'true'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      name: Setup .NET SDK
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: '7.0.x'
    -
      name: '[Build Docker images]'
      shell: pwsh
      run: dotnet run/build.dll --target=DockerBuildDeps --dotnet_distro=${{ matrix.distro }} --docker_registry=dockerhub --push_images=${{env.PUSH_IMAGES}}

    -
      name: Login to GitHub Container Registry
      if: success() && env.PUSH_IMAGES == 'true'
      uses: docker/login-action@v2
      with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_GITHUB_TOKEN }}
    -
      name: '[Build Docker images]'
      shell: pwsh
      run: dotnet run/build.dll --target=DockerBuildDeps --dotnet_distro=${{ matrix.distro }} --docker_registry=github --push_images=${{env.PUSH_IMAGES}}
