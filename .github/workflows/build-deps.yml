name: Build Deps

on:
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'

    pull_request:
        branches:
            - main
    schedule:
        -   cron: "0 11 * * 1,4"

jobs:
    prepare:
        name: Prepare Build
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Cache cake frosting
                id: cache-cake
                uses: actions/cache@v4
                with:
                    path: run
                    key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
            -   name: Setup .NET SDK
                uses: actions/setup-dotnet@v4
                with:
                    global-json-file: build/global.json
            -   name: '[Prepare]'
                if: steps.cache-cake.outputs.cache-hit != 'true'
                run: dotnet build build/CI.sln --configuration=Release

    build_deps:
        name: Deps
        needs: [ prepare ]
        env:
            PUSH_IMAGES: ${{github.event_name != 'pull_request' && github.repository_owner == 'GitTools'}}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                distro:
                    - alpine.3.20
                    - centos.stream.9
                    - debian.12
                    - fedora.40
                    - ubuntu.20.04
                    - ubuntu.22.04
                    - ubuntu.24.04
            fail-fast: false
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Use cached cake frosting
                id: cache-cake
                uses: actions/cache@v4
                with:
                    path: run
                    key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
            -   name: Setup .NET SDK
                uses: actions/setup-dotnet@v4
                with:
                    global-json-file: build/global.json
            -   name: Set up Docker
                uses: crazy-max/ghaction-setup-docker@v3
                with:
                    daemon-config: '{ "features": { "containerd-snapshotter": true } }'
            -   name: Setup QEMU
                uses: docker/setup-qemu-action@v3
            -   name: Setup Docker Buildx
                uses: docker/setup-buildx-action@v3
                with:
                    version: 'latest'
                    driver-opts: 'image=moby/buildkit:buildx-stable-1'
                    install: true
            -   name: Login to DockerHub
                if: success() && env.PUSH_IMAGES == 'true'
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            -   name: '[Build Docker images]'
                shell: pwsh
                run: dotnet run/build.dll --target=DockerBuildDeps --dotnet_distro=${{ matrix.distro }} --docker_registry=dockerhub `
                    --push_images=${{env.PUSH_IMAGES}} --verbosity=diagnostic

            -   name: Login to GitHub Container Registry
                if: success() && env.PUSH_IMAGES == 'true'
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.repository_owner }}
                    password: ${{ secrets.DOCKER_GITHUB_TOKEN }}
            -   name: '[Build Docker images]'
                shell: pwsh
                run: dotnet run/build.dll --target=DockerBuildDeps --dotnet_distro=${{ matrix.distro }} --docker_registry=github `
                    --push_images=${{env.PUSH_IMAGES}} --verbosity=diagnostic
